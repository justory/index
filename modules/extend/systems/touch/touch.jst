/**
 * touch模块
 * @author {@link http://justory.cn/#touch}
 */

let [status, timeout] = [false];
const clickTimeout = (time) => {
	timeout = setTimeout(() => {
		status = false;
		clearTimeout(timeout);
	}, parseInt(time));
};

const ret = {
	touch(...arg) {
		const cfg = justory.configs;
		let option = arg[0];
		let cls = "string" == typeof arg[1] ? arg[1] : "";
		let last = arg.last();
		let tap = "function" == typeof last ? last : last.tap;
		let [classStatus, touchstartStatus, touchlangStatus, touchstartTimeout, touchlangTimeout, touchmoveTimeout, touchendTimeout] = [true, true, true];
		const click = (t) => {
			if (status) {
				clearTimeout(clickTimeout);
				clickTimeout(cfg.blockClickTime);
				return false;
			} else {
				status = true;
			}
			tap(t);
			clickTimeout(cfg.blockClickTime);
			//ret.talkingDataClick();
		}
		$(document).on("touchstart", option, function() {
			classStatus = true;
			touchstartStatus = true;
			touchlangStatus = true;
			clearTimeout(touchstartTimeout);
			clearTimeout(touchlangTimeout);
			clearTimeout(touchmoveTimeout);
			clearTimeout(touchendTimeout);
			if (cls) {
				touchstartTimeout = setTimeout(() => {
					classStatus && $(this).addClass(cls);
				}, 90)
			}
			touchlangTimeout = setTimeout(() => {
				touchstartStatus = false;
				if (touchlangStatus && $.isPlainObject(last) && last.lang) {
					$(this).removeClass(cls);
					last.lang();
					justory.log("long touchstart:", {
						option
					});
				}
			}, 500);
		})
		$(document).on("touchmove", option, function() {
			classStatus = false;
			touchlangStatus = false;
			clearTimeout(touchstartTimeout);
			clearTimeout(touchlangTimeout);
			cls && (touchmoveTimeout = setTimeout(() => {
				$(this).removeClass(cls);
			}, 100));
			justory.log("touchmove:", {
				option
			})
		})
		$(document).on("touchend", option, function() {
			touchlangStatus = false;
			clearTimeout(touchlangTimeout);
			cls && (touchendTimeout = setTimeout(() => {
				$(this).removeClass(cls);
			}, 100));
			justory.log("touchend:", {
				option
			});
			classStatus && touchstartStatus && click(this);
		})
	},
	talkingDataClick: function(t, o) {
		var e = justory.configs,
			n = justory.systems;
		if (e.talkingDataClick) {
			var i = api.require("talkingData"),
				a = $(t).index(o) || 0,
				u = $(o).text(),
				c = $(o).attr("title"),
				r = t.replace(/\./g, "CS_").replace(/\#/g, "ID_").replace(/\s+/g, "$"),
				u = u && u.length > 32 ? u.substr(0, 32) : u,
				c = c && c.length > 32 ? c.substr(0, 32) : c,
				s = {
					eventId: r.length > 32 ? r.substr(0, 32) : r,
					parameters: {
						from: api.winName + "_" + api.frameName,
						index: a,
						title: c || u
					}
				};
			i.onEvent(s), n.log("talkingDataClick:", {
				option: t,
				talkingData: s
			})
		}
	}
}
export default ret;